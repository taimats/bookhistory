/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/health": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** サーバーの監視 */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description サーバー正常稼働 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @description ok */
                            message?: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/health/db": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** DBサーバーの監視 */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description DBサーバー正常稼働 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @description ok */
                            message?: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/records/{recordId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** ユーザーごとに記録を返す */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description 記録の識別子 */
                    recordId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 記録の取得に成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Record"][];
                    };
                };
                /** @description 不正なリクエスト */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
                /** @description 認証が必要なリクエスト */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
                /** @description 記録なし */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/charts/{chartId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** ユーザーごとにチャートデータを返す */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description チャートの識別子 */
                    chartId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description チャートの取得に成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Chart"][];
                    };
                };
                /** @description 不正なリクエスト */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
                /** @description 認証が必須 */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
                /** @description 記録なし */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/shelves/{shelfId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** ユーザーごとに本棚を取得 */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description 本棚の識別子 */
                    shelfId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 本棚の取得に成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Book"][];
                    };
                };
                /** @description 不正なリクエスト */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
                /** @description 認証が必要 */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
                /** @description 記録なし */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        /** ユーザーごとに本棚を更新 */
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description 本棚の識別子 */
                    shelfId: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["Book"][];
                };
            };
            responses: {
                /** @description 本の更新に成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 不正なリクエスト */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
                /** @description 認証が必要 */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
                /** @description 記録なし */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        Record: {
            /** @description 購入額の総計 */
            costs?: string;
            /** @description 購入額のうち読了分 */
            costsRead?: string;
            /** @description 購入冊数の総計 */
            volumes?: string;
            /** @description 購入冊数のうち読了分 */
            volumesRead?: string;
            /** @description 購入ページ数の総計 */
            pages?: string;
            /** @description 購入ページ数のうち読了分 */
            pagesRead?: string;
        };
        Chart: {
            /** @description チャートを分類する識別子 */
            label?: string;
            /** @description 各データの年 */
            year?: string;
            /** @description 各データの月 */
            month?: string;
            /** @description 各データ内容 */
            data?: string;
        };
        Book: {
            /** @description 本の識別子 */
            isbn?: string;
            /** @description 本の画像 */
            imageURL?: string;
            /** @description 本の書名 */
            title?: string;
            /** @description 本の著者 */
            author?: string;
            /** @description 本の価格 */
            price?: string;
            /** @description 本の状態 */
            bookStatus?: string;
        };
        Error: {
            /** @description statusコード */
            code?: number;
            /** @description エラーメッセージ */
            errMsg?: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
